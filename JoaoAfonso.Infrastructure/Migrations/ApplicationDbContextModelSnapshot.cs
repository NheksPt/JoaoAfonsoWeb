// <auto-generated />
using JoaoAfonso.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JoaoAfonso.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JoaoAfonso.Domain.Entities.Animacao_trabalhos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duracao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareUsado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TamanhoFicheiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImagem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Animacao_Trabalhos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Descricao = "Animação de um cogumelo numa floresta mágica rodeado de borboletas luminosas.",
                            Duracao = "0.5 segundos",
                            Nome = "Magic Mushrooms",
                            SoftwareUsado = "Blender",
                            TamanhoFicheiro = "10 Mb",
                            UrlImagem = "https://placehold.co/600x400"
                        },
                        new
                        {
                            ID = 2,
                            Descricao = "Animação de uma morgue.",
                            Duracao = "0.5 segundos",
                            Nome = "Rigor Mortis",
                            SoftwareUsado = "Blender",
                            TamanhoFicheiro = "16 Mb",
                            UrlImagem = "https://placehold.co/600x400"
                        },
                        new
                        {
                            ID = 3,
                            Descricao = "Animação de eletrico.",
                            Duracao = "0.5 segundos",
                            Nome = "Eletrico",
                            SoftwareUsado = "Blender",
                            TamanhoFicheiro = "12 Mb",
                            UrlImagem = "https://placehold.co/600x400"
                        },
                        new
                        {
                            ID = 4,
                            Descricao = "Animação de Comboio à noite.",
                            Duracao = "0.5 segundos",
                            Nome = "Train to Tokio",
                            SoftwareUsado = "Blender",
                            TamanhoFicheiro = "15 Mb",
                            UrlImagem = "https://placehold.co/600x400"
                        });
                });

            modelBuilder.Entity("JoaoAfonso.Domain.Entities.Escultura_trabalhos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareUsado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TamanhoFicheiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImagem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Escultura_Trabalhos");
                });

            modelBuilder.Entity("JoaoAfonso.Domain.Entities.Modelacao_trabalhos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareUsado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TamanhoFicheiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImagem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Modelacao_Trabalhos");
                });
#pragma warning restore 612, 618
        }
    }
}
